//
//  initialize.cpp
//  math
//
//  Created by Derek Li on 10/11/23.
//

#include "initialize.hpp"
#include "javaobjectimpl.hpp"

void initialize() {
    Minecraft::initialize();
    Entity::initialize();
    Block::initialize();
    World::initialize();
    WorldBorder::initialize();
    List::initialize();
    IBorderListener::initialize();
    EnumBorderStatus::initialize();
    String::initialize();
    Object::initialize();
    Class::initialize();
    SecurityManager::initialize();
    Permission::initialize();
    PermissionCollection::initialize();
    Enumeration::initialize();
    Stream::initialize();
    ThreadGroup::initialize();
    Thread::initialize();
    Throwable::initialize();
    PrintStream::initialize();
    arr_C::initialize();
    CharSequence::initialize();
    Object_interface::initialize();
    Locale::initialize();
    Locale_Category::initialize();
    Enum::initialize();
    ObjectInputStream::initialize();
    ObjectStreamClass::initialize();
    ObjectStreamField::initialize();
    Field::initialize();
    FieldRepository::initialize();
    GenericsFactory::initialize();
    Type::initialize();
    TypeSignature::initialize();
    AbstractRepository::initialize();
    Tree::initialize();
    Reifier::initialize();
    Map::initialize();
    FieldAccessor::initialize();
    AnnotatedType::initialize();
    AccessibleObject::initialize();
    AccessibleObject_interface::initialize();
    StringBuilder::initialize();
    StringBuffer::initialize();
    AbstractStringBuilder::initialize();
    arr_B::initialize();
    ObjectOutputStream::initialize();
    ObjectOutputStream_PutField::initialize();
    ObjectOutput::initialize();
    Boolean::initialize();
    IOException::initialize();
    Exception::initialize();
    Externalizable::initialize();
    OutputStream::initialize();
    ReferenceQueue::initialize();
    Reference::initialize();
    Consumer::initialize();
    ConcurrentMap::initialize();
    ObjectStreamField_interface::initialize();
    ObjectStreamClass_FieldReflector::initialize();
    ProtectionDomain::initialize();
    ClassLoader::initialize();
    Module::initialize();
    ModuleDescriptor::initialize();
    Set::initialize();
    Optional::initialize();
    Function::initialize();
    Predicate::initialize();
    Supplier::initialize();
    Runnable::initialize();
    InputStream::initialize();
    ByteBuffer::initialize();
    ByteOrder::initialize();
    CharBuffer::initialize();
    Buffer::initialize();
    IllegalArgumentException::initialize();
    RuntimeException::initialize();
    ScopedMemoryAccess_Scope::initialize();
    ShortBuffer::initialize();
    arr_S::initialize();
    IntBuffer::initialize();
    arr_I::initialize();
    LongBuffer::initialize();
    arr_J::initialize();
    FloatBuffer::initialize();
    arr_F::initialize();
    DoubleBuffer::initialize();
    arr_D::initialize();
    ModuleDescriptor_Builder::initialize();
    ModuleDescriptor_Version::initialize();
    ModuleDescriptor_Exports::initialize();
    ModuleDescriptor_Opens::initialize();
    ModuleDescriptor_Provides::initialize();
    ModuleDescriptor_Requires::initialize();
    ModuleLayer::initialize();
    Configuration::initialize();
    ModuleFinder::initialize();
    Collection::initialize();
    ResolvedModule::initialize();
    ModuleReference::initialize();
    ModuleReader::initialize();
    ServicesCatalog::initialize();
    ServicesCatalog_ServiceProvider_interface::initialize();
    ModuleLayer_Controller::initialize();
    LayerInstantiationException::initialize();
    Package::initialize();
    URL::initialize();
    InetAddress::initialize();
    InetAddress_InetAddressHolder::initialize();
    NetworkInterface::initialize();
    InetAddress_NameService::initialize();
    InetAddressImpl::initialize();
    URLStreamHandler::initialize();
    URLConnection::initialize();
    Class_interface::initialize();
    ContentHandler::initialize();
    FileNameMap::initialize();
    ContentHandlerFactory::initialize();
    Proxy::initialize();
    Proxy_Type::initialize();
    SocketAddress::initialize();
    URI::initialize();
    CharsetEncoder::initialize();
    CodingErrorAction::initialize();
    CoderResult::initialize();
    Charset::initialize();
    Iterator::initialize();
    CharsetDecoder::initialize();
    SortedMap::initialize();
    URLStreamHandlerFactory::initialize();
    NamedPackage::initialize();
    Void::initialize();
    CodeSource::initialize();
    Certificate_interface::initialize();
    NativeLibrary::initialize();
    File::initialize();
    Path::initialize();
    AssertionStatusDirectives::initialize();
    ConcurrentHashMap::initialize();
    ConcurrentHashMap_KeySetView::initialize();
    ConcurrentHashMap_CollectionView::initialize();
    ConcurrentHashMap_Node_interface::initialize();
    ConcurrentHashMap_Node::initialize();
    BiFunction::initialize();
    ToDoubleBiFunction::initialize();
    DoubleBinaryOperator::initialize();
    ToLongBiFunction::initialize();
    LongBinaryOperator::initialize();
    ToIntBiFunction::initialize();
    IntBinaryOperator::initialize();
    ToDoubleFunction::initialize();
    ToLongFunction::initialize();
    ToIntFunction::initialize();
    Map_Entry::initialize();
    AbstractMap::initialize();
    Constructor::initialize();
    ConstructorRepository::initialize();
    MethodTypeSignature::initialize();
    FormalTypeParameter_interface::initialize();
    TypeSignature_interface::initialize();
    ReturnType::initialize();
    FieldTypeSignature_interface::initialize();
    Visitor::initialize();
    GenericDeclRepository::initialize();
    ConstructorAccessor::initialize();
    Executable::initialize();
    TypeVariable::initialize();
    Parameter_interface::initialize();
    MethodHandle::initialize();
    MethodType::initialize();
    MethodTypeForm::initialize();
    LambdaForm::initialize();
    LambdaForm_BasicType::initialize();
    Wrapper::initialize();
    ClassCastException::initialize();
    Number::initialize();
    LambdaForm_Name::initialize();
    LambdaForm_Name_interface::initialize();
    LambdaForm_NamedFunction::initialize();
    MemberName::initialize();
    MemberName_Factory::initialize();
    IllegalAccessException::initialize();
    ReflectiveOperationException::initialize();
    MethodHandleImpl_Intrinsic::initialize();
    LambdaFormEditor::initialize();
    LambdaFormBuffer::initialize();
    BoundMethodHandle::initialize();
    BoundMethodHandle_SpeciesData::initialize();
    ClassSpecializer_SpeciesData::initialize();
    ClassSpecializer::initialize();
    ClassSpecializer_Factory::initialize();
    MethodVisitor::initialize();
    AnnotationVisitor::initialize();
    Label::initialize();
    ByteVector::initialize();
    Label_interface::initialize();
    TypePath::initialize();
    Attribute::initialize();
    ClassWriter::initialize();
    String_interface::initialize();
    FieldVisitor::initialize();
    ModuleVisitor::initialize();
    RecordComponentVisitor::initialize();
    Handle::initialize();
    ClassVisitor::initialize();
    ClassReader::initialize();
    Attribute_interface::initialize();
    Context::initialize();
    ConstantDynamic::initialize();
    SymbolTable::initialize();
    SymbolTable_Entry::initialize();
    Symbol::initialize();
    LambdaFormEditor_TransformKey::initialize();
    LambdaFormEditor_Transform::initialize();
    SoftReference::initialize();
    LambdaForm_BasicType_interface::initialize();
    PerfCounter::initialize();
    Invokers::initialize();
    VarHandle_AccessMode::initialize();
    WrongMethodTypeException::initialize();
    CallSite::initialize();
    VarHandle::initialize();
    VarHandle_AccessDescriptor::initialize();
    VarHandle_TypesAndInvokers::initialize();
    VarHandle_AccessType::initialize();
    VarForm::initialize();
    IndexOutOfBoundsException::initialize();
    Method::initialize();
    MethodRepository::initialize();
    MethodAccessor::initialize();
    Long::initialize();
    MethodHandles_Lookup::initialize();
    MethodHandleInfo::initialize();
    MethodHandles_Lookup_ClassDefiner::initialize();
    MethodHandles_Lookup_ClassFile::initialize();
    DirectMethodHandle::initialize();
    LambdaForm_Kind::initialize();
    MethodHandles_Lookup_ClassOption_interface::initialize();
    BigInteger::initialize();
    Random::initialize();
    ClassNotFoundException::initialize();
    ObjectInputStream_GetField::initialize();
    ObjectInputValidation::initialize();
    ObjectInputFilter::initialize();
    Locale_FilteringMode::initialize();
    LocaleExtensions::initialize();
    Character::initialize();
    Extension::initialize();
    BaseLocale::initialize();
    LocaleResources::initialize();
    ResourceBundle::initialize();
    ResourceBundle_Control::initialize();
    ResourceBundle_CacheKey::initialize();
    ServiceLoader::initialize();
    ServicesCatalog_ServiceProvider::initialize();
    ServiceLoader_Provider::initialize();
    Calendar::initialize();
    Date::initialize();
    Instant::initialize();
    TemporalAccessor::initialize();
    Clock::initialize();
    Duration::initialize();
    BigDecimal::initialize();
    MathContext::initialize();
    RoundingMode::initialize();
    BigDecimal_interface::initialize();
    MutableBigInteger::initialize();
    TemporalUnit::initialize();
    TemporalAmount::initialize();
    Temporal::initialize();
    DataInput::initialize();
    DataOutput::initialize();
    ZoneId::initialize();
    ZoneOffset::initialize();
    ZoneRules::initialize();
    LocalDateTime::initialize();
    LocalDate::initialize();
    IsoChronology::initialize();
    ZonedDateTime::initialize();
    OffsetDateTime::initialize();
    LocalTime::initialize();
    DateTimeFormatter::initialize();
    Chronology::initialize();
    Appendable::initialize();
    ParsePosition::initialize();
    DateTimeParseException::initialize();
    DateTimeException::initialize();
    DateTimeParseContext::initialize();
    ResolverStyle::initialize();
    Parsed::initialize();
    TemporalField::initialize();
    Period::initialize();
    ChronoLocalDate::initialize();
    DecimalStyle::initialize();
    DateTimeFormatterBuilder_DayPeriod::initialize();
    FormatStyle::initialize();
    TemporalQuery::initialize();
    TemporalField_interface::initialize();
    TemporalQuery_interface::initialize();
    DateTimeFormatterBuilder_CompositePrinterParser::initialize();
    Format::initialize();
    FieldPosition::initialize();
    Format_Field::initialize();
    AttributedCharacterIterator_Attribute::initialize();
    Format_FieldDelegate::initialize();
    AttributedCharacterIterator::initialize();
    AttributedCharacterIterator_interface::initialize();
    TemporalAdjuster::initialize();
    OffsetTime::initialize();
    ObjectInput::initialize();
    Comparator::initialize();
    Month::initialize();
    TextStyle::initialize();
    DayOfWeek::initialize();
    IsoEra::initialize();
    Era::initialize();
    AbstractChronology::initialize();
    ChronoField::initialize();
    ZoneOffsetTransition::initialize();
    BaseCalendar_Date::initialize();
    CalendarDate::initialize();
    TimeZone::initialize();
    Era::initialize();
    BaseCalendar::initialize();
    AbstractCalendar::initialize();
    Era_interface::initialize();
    CalendarSystem::initialize();
    Gregorian::initialize();
    Gregorian_Date::initialize();
    Locale_IsoCountryCode::initialize();
    FilterOutputStream::initialize();
    PrintWriter::initialize();
    Writer::initialize();
    Throwable_PrintStreamOrWriter::initialize();
    StackTraceElement_interface::initialize();
    Thread_interface::initialize();
    Thread_UncaughtExceptionHandler::initialize();
    Interruptible::initialize();
    Thread_State::initialize();
    ThreadGroup_interface::initialize();
    FileDescriptor::initialize();
    Closeable::initialize();
    PhantomCleanable::initialize();
    PhantomReference::initialize();
    ReflectionFactory::initialize();
    ClassRepository::initialize();
    ClassSignature::initialize();
    ClassTypeSignature::initialize();
    ClassTypeSignature_interface::initialize();
    Class_ReflectionData::initialize();
    Class_EnclosingMethodInfo::initialize();
    Field_interface::initialize();
    Method_interface::initialize();
    PublicMethods_MethodList::initialize();
    Class_AnnotationData::initialize();
    ConstantPool::initialize();
    Member::initialize();
    ConstantPool_Tag::initialize();
    AnnotationType::initialize();
    RetentionPolicy::initialize();
    CharSequence_interface::initialize();
    Iterable::initialize();
    BlockPos::initialize();
    Vec3i::initialize();
    EnumFacing::initialize();
    EnumFacing_Axis::initialize();
    EnumFacing_Plane::initialize();
    EnumFacing_AxisDirection::initialize();
    AxisAlignedBB::initialize();
    Vec3::initialize();
    MovingObjectPosition::initialize();
    ChunkCoordIntPair::initialize();
    Chunk::initialize();
    EnumSkyBlock::initialize();
    TileEntity::initialize();
    CrashReportCategory::initialize();
    IBlockState::initialize();
    Callable::initialize();
    StackTraceElement::initialize();
    StackFrameInfo::initialize();
    NBTTagCompound::initialize();
    CrashReport::initialize();
    NBTBase::initialize();
    NBTSizeTracker::initialize();
    NBTTagList::initialize();
    Packet::initialize();
    IChunkProvider::initialize();
    ExtendedBlockStorage_interface::initialize();
    Chunk_EnumCreateEntityType::initialize();
    WorldChunkManager::initialize();
    BiomeGenBase::initialize();
    BiomeDecorator::initialize();
    WorldGenerator::initialize();
    WorldGenAbstractTree::initialize();
    BlockFlower_EnumFlowerType::initialize();
    BlockFlower_EnumFlowerColor::initialize();
    BlockFlower::initialize();
    BlockState::initialize();
    ImmutableList::initialize();
    UnmodifiableIterator::initialize();
    ImmutableList_Builder::initialize();
    ImmutableCollection_ArrayBasedBuilder::initialize();
    ImmutableCollection_Builder::initialize();
    ImmutableCollection::initialize();
    AbstractCollection::initialize();
    UnmodifiableListIterator::initialize();
    Item::initialize();
    ItemStack::initialize();
    Multimap::initialize();
    EntityPlayer::initialize();
    EntityItem::initialize();
    DamageSource::initialize();
    EntityLivingBase::initialize();
    PotionEffect::initialize();
    BaseAttributeMap::initialize();
    IAttribute::initialize();
    IAttributeInstance::initialize();
    Potion::initialize();
    AttributeModifier::initialize();
    UUID::initialize();
    CombatTracker::initialize();
    IChatComponent::initialize();
    CombatEntry::initialize();
    EnumCreatureAttribute::initialize();
    Team::initialize();
    Team_EnumVisible::initialize();
    EntityArrow::initialize();
    EntityFireball::initialize();
    Explosion::initialize();
    StatBase::initialize();
    IScoreObjectiveCriteria::initialize();
    Scoreboard::initialize();
    ScoreObjective::initialize();
    IScoreObjectiveCriteria_EnumRenderType::initialize();
    ScorePlayerTeam::initialize();
    EnumChatFormatting::initialize();
    Score::initialize();
    TileEntitySign::initialize();
    CommandResultStats::initialize();
    CommandResultStats_Type::initialize();
    ICommandSender::initialize();
    CommandBlockLogic::initialize();
    ByteBuf::initialize();
    ByteBufProcessor::initialize();
    ByteBufAllocator::initialize();
    ScatteringByteChannel::initialize();
    GatheringByteChannel::initialize();
    IMerchant::initialize();
    IInventory::initialize();
    EntityHorse::initialize();
    AnimalChest::initialize();
    InventoryBasic::initialize();
    IInvBasic::initialize();
    EntityAnimal::initialize();
    EntityAgeable::initialize();
    EntityCreature::initialize();
    EntityLiving::initialize();
    PathNavigate::initialize();
    PathFinder::initialize();
    IBlockAccess::initialize();
    PathEntity::initialize();
    PathPoint::initialize();
    EntityLookHelper::initialize();
    EntityMoveHelper::initialize();
    EntityJumpHelper::initialize();
    EntitySenses::initialize();
    DifficultyInstance::initialize();
    EnumDifficulty::initialize();
    IEntityLivingData::initialize();
    GameProfile::initialize();
    PropertyMap::initialize();
    ForwardingMultimap::initialize();
    ForwardingObject::initialize();
    FoodStats::initialize();
    ItemFood::initialize();
    EnumAction::initialize();
    WorldSettings_GameType::initialize();
    PlayerCapabilities::initialize();
    InventoryEnderChest::initialize();
    TileEntityEnderChest::initialize();
    IInteractionObject::initialize();
    EntityPlayer_EnumStatus::initialize();
    LockCode::initialize();
    EnumPlayerModelParts::initialize();
    Enchantment::initialize();
    EntityItemFrame::initialize();
    EntityHanging::initialize();
    EnumRarity::initialize();
    CreativeTabs::initialize();
    EnumEnchantmentType::initialize();
    EnumEnchantmentType_interface::initialize();
    ResourceLocation::initialize();
    Block_EnumOffsetType::initialize();
    IProperty::initialize();
    BlockBush::initialize();
    EnumWorldBlockLayer::initialize();
    EnumCreatureType::initialize();
    ChunkPrimer::initialize();
    BiomeGenBase_TempCategory::initialize();
    BiomeGenBase_Height::initialize();
    Predicate::initialize();
    IWorldAccess::initialize();
    Material::initialize();
    MapColor::initialize();
    StructureBoundingBox::initialize();
    NBTTagIntArray::initialize();
    ISaveHandler::initialize();
    MapStorage::initialize();
    WorldSavedData::initialize();
    VillageCollection::initialize();
    WorldProvider::initialize();
    Village::initialize();
    VillageDoorInfo::initialize();
    EnumParticleTypes::initialize();
    GameRules::initialize();
    GameRules_ValueType::initialize();
    WorldInfo::initialize();
    WorldType::initialize();
    WorldSettings::initialize();
    Block_SoundType::initialize();
    HoverEvent::initialize();
    HoverEvent_Action::initialize();
    EntityLightningBolt::initialize();
    EntityWeatherEffect::initialize();
    EntityPlayerMP::initialize();
    WorldServer::initialize();
    EntityTracker::initialize();
    IProgressUpdate::initialize();
    BiomeGenBase_SpawnListEntry::initialize();
    WeightedRandom_Item::initialize();
    BlockEventData::initialize();
    PlayerManager::initialize();
    PlayerManager_PlayerInstance::initialize();
    Teleporter::initialize();
    MinecraftServer::initialize();
    ServerConfigurationManager::initialize();
    ServerScoreboard::initialize();
    ScoreboardSaveData::initialize();
    UserListBans::initialize();
    JsonObject::initialize();
    JsonElement::initialize();
    JsonArray::initialize();
    JsonNull::initialize();
    JsonPrimitive::initialize();
    UserListEntry::initialize();
    UserList::initialize();
    BanList::initialize();
    IPBanEntry::initialize();
    BanEntry::initialize();
    UserListWhitelist::initialize();
    WorldServer_interface::initialize();
    StatisticsFile::initialize();
    StatFileWriter::initialize();
    Achievement::initialize();
    IStatStringFormat::initialize();
    IJsonSerializable::initialize();
    UserListOps::initialize();
    NetworkManager::initialize();
    EnumConnectionState::initialize();
    EnumPacketDirection::initialize();
    Integer::initialize();
    ChannelHandlerContext::initialize();
    GenericFutureListener_interface::initialize();
    SecretKey::initialize();
    INetHandler::initialize();
    GenericFutureListener::initialize();
    SimpleChannelInboundHandler::initialize();
    ChannelInboundHandlerAdapter::initialize();
    ChannelHandlerAdapter::initialize();
    ServerCommandManager::initialize();
    CommandHandler::initialize();
    ICommand::initialize();
    ISaveFormat::initialize();
    ServerStatusResponse::initialize();
    ServerStatusResponse_MinecraftProtocolVersionIdentifier::initialize();
    ServerStatusResponse_PlayerCountData::initialize();
    GameProfile_interface::initialize();
    ICommandManager::initialize();
    MinecraftSessionService::initialize();
    GameProfileRepository::initialize();
    PlayerProfileCache::initialize();
    PlayerProfileCache_ProfileEntry::initialize();
    ListenableFuture::initialize();
    PlayerUsageSnooper::initialize();
    NetworkSystem::initialize();
    KeyPair::initialize();
    PublicKey::initialize();
    PrivateKey::initialize();
    Container::initialize();
    Slot::initialize();
    ICrafting::initialize();
    ItemStack_interface::initialize();
    InventoryPlayer::initialize();
    C15PacketClientSettings::initialize();
    EntityPlayer_EnumChatVisibility::initialize();
    DataWatcher::initialize();
    DataWatcher_WatchableObject::initialize();
    Rotations::initialize();
    PacketBuffer::initialize();
    NetHandlerPlayClient::initialize();
    NetworkPlayerInfo::initialize();
    ServerData::initialize();
    ServerData_ServerResourceMode::initialize();
    IntegratedServer::initialize();
    TextureManager::initialize();
    ITextureObject::initialize();
    ITickableTextureObject::initialize();
    DynamicTexture::initialize();
    AbstractTexture::initialize();
    IResourceManager::initialize();
    ResourcePackRepository::initialize();
    IResourcePack::initialize();
    LanguageManager::initialize();
    SortedSet::initialize();
    Language::initialize();
    TextureMap::initialize();
    TextureAtlasSprite::initialize();
    BufferedImage_interface::initialize();
    AnimationMetadataSection::initialize();
    AnimationFrame::initialize();
    IIconCreator::initialize();
    SoundHandler::initialize();
    ISound::initialize();
    SoundList::initialize();
    SoundCategory::initialize();
    SoundEventAccessorComposite::initialize();
    ISoundEventAccessor::initialize();
    SoundPoolEntry::initialize();
    SoundCategory_interface::initialize();
    MusicTicker_MusicType::initialize();
    IStream::initialize();
    SkinManager::initialize();
    SkinManager_SkinAvailableCallback::initialize();
    MinecraftProfileTexture::initialize();
    MinecraftProfileTexture_Type::initialize();
    BlockRendererDispatcher::initialize();
    WorldRenderer::initialize();
    WorldRenderer_State::initialize();
    VertexFormat::initialize();
    VertexFormatElement::initialize();
    VertexFormatElement_EnumUsage::initialize();
    VertexFormatElement_EnumType::initialize();
    IBakedModel::initialize();
    BlockModelRenderer::initialize();
    BitSet::initialize();
    IntStream::initialize();
    BlockModelRenderer_AmbientOcclusionFace::initialize();
    BlockModelShapes::initialize();
    BlockStateMapper::initialize();
    IStateMapper::initialize();
    Block_interface::initialize();
    ModelManager::initialize();
    ModelResourceLocation::initialize();
    RenderManager::initialize();
    Render::initialize();
    ICamera::initialize();
    FontRenderer::initialize();
    GameSettings::initialize();
    KeyBinding::initialize();
    GameSettings_Options::initialize();
    RenderItem::initialize();
    ItemModelMesher::initialize();
    ItemMeshDefinition::initialize();
    BakedQuad::initialize();
    ItemCameraTransforms_TransformType::initialize();
    ItemTransformVec3f::initialize();
    ItemRenderer::initialize();
    AbstractClientPlayer::initialize();
    ThreadDownloadImageData::initialize();
    BufferedImage::initialize();
    WritableRaster::initialize();
    Raster::initialize();
    DataBuffer::initialize();
    Point::initialize();
    Point2D::initialize();
    SampleModel::initialize();
    Rectangle::initialize();
    Rectangle2D::initialize();
    Line2D::initialize();
    RectangularShape::initialize();
    Dimension2D::initialize();
    Dimension::initialize();
    Graphics::initialize();
    Color::initialize();
    ColorSpace::initialize();
    Font::initialize();
    AffineTransform::initialize();
    Shape::initialize();
    Point2D_interface::initialize();
    AttributeValues::initialize();
    Hashtable::initialize();
    Hashtable_Entry_interface::initialize();
    Dictionary::initialize();
    EAttribute::initialize();
    Point2D_Double::initialize();
    GraphicAttribute::initialize();
    Graphics2D::initialize();
    Image::initialize();
    GraphicsConfiguration::initialize();
    VolatileImage::initialize();
    ImageCapabilities::initialize();
    ImageProducer::initialize();
    GraphicsDevice::initialize();
    DisplayMode::initialize();
    GraphicsConfigTemplate::initialize();
    GraphicsConfiguration_interface::initialize();
    Window::initialize();
    Toolkit::initialize();
    Clipboard::initialize();
    Transferable::initialize();
    ClipboardOwner::initialize();
    DataFlavor::initialize();
    MimeType::initialize();
    MimeTypeParameterList::initialize();
    DataFlavor_interface::initialize();
    Reader::initialize();
    FlavorListener::initialize();
    InputMethodHighlight::initialize();
    Insets::initialize();
    EventQueue::initialize();
    AWTEvent::initialize();
    Event::initialize();
    KeyEvent::initialize();
    InputEvent::initialize();
    ComponentEvent::initialize();
    Component::initialize();
    ComponentFactory::initialize();
    Cursor::initialize();
    FocusEvent_Cause::initialize();
    PropertyChangeListener::initialize();
    ComponentOrientation::initialize();
    BufferCapabilities::initialize();
    BufferCapabilities_FlipContents::initialize();
    AttributeValue::initialize();
    BufferStrategy::initialize();
    InputContext::initialize();
    Character_Subset_interface::initialize();
    Container::initialize();
    LayoutManager::initialize();
    FocusTraversalPolicy::initialize();
    ContainerPeer::initialize();
    ContainerEvent::initialize();
    Container_EventTargetFilter::initialize();
    ContainerListener::initialize();
    Accessible::initialize();
    Region::initialize();
    SpanIterator::initialize();
    RegionIterator::initialize();
    AccessibleContext::initialize();
    AccessibleComponent::initialize();
    AccessibleSelection::initialize();
    AccessibleStateSet::initialize();
    AccessibleState::initialize();
    AccessibleBundle::initialize();
    AccessibleState_interface::initialize();
    AccessibleRole::initialize();
    AccessibleAction::initialize();
    AccessibleText::initialize();
    AccessibleEditableText::initialize();
    AccessibleValue::initialize();
    AccessibleRelationSet::initialize();
    AccessibleRelation::initialize();
    AccessibleRelation_interface::initialize();
    AccessibleTable::initialize();
    MouseWheelEvent::initialize();
    MouseEvent::initialize();
    PointerInfo::initialize();
    FontMetrics::initialize();
    CharacterIterator::initialize();
    LineMetrics::initialize();
    FontRenderContext::initialize();
    ImageObserver::initialize();
    FocusEvent::initialize();
    InputMethodEvent::initialize();
    TextHitInfo::initialize();
    HierarchyEvent::initialize();
    ComponentListener::initialize();
    FocusListener::initialize();
    KeyListener::initialize();
    MouseListener::initialize();
    MouseMotionListener::initialize();
    InputMethodListener::initialize();
    HierarchyListener::initialize();
    HierarchyBoundsListener::initialize();
    MouseWheelListener::initialize();
    ComponentPeer::initialize();
    AccessControlContext::initialize();
    DomainCombiner::initialize();
    Debug::initialize();
    Permission_interface::initialize();
    ProtectionDomain_interface::initialize();
    DropTarget::initialize();
    FlavorMap::initialize();
    DropTargetContext::initialize();
    DropTargetContextPeer::initialize();
    DropTargetListener::initialize();
    DropTarget_DropTargetAutoScroller::initialize();
    Component_BaselineResizeBehavior::initialize();
    InputMethodRequests::initialize();
    RequestFocusController::initialize();
    PopupMenu::initialize();
    MenuContainer::initialize();
    Menu::initialize();
    MenuItem::initialize();
    MenuShortcut::initialize();
    ActionEvent::initialize();
    ActionListener::initialize();
    MenuComponent::initialize();
    ColorModel::initialize();
    EventObject::initialize();
    EventQueueItem::initialize();
    PaintEvent::initialize();
    PeerEvent::initialize();
    InvocationEvent::initialize();
    PlatformLogger::initialize();
    System_Logger_Level::initialize();
    PlatformLogger_Level::initialize();
    FwDispatcher::initialize();
    EventDispatchThread::initialize();
    Conditional::initialize();
    EventFilter::initialize();
    SecondaryLoop::initialize();
    Dialog_ModalExclusionType::initialize();
    PropertyChangeSupport::initialize();
    PropertyChangeListener_interface::initialize();
    PropertyChangeEvent::initialize();
    Frame::initialize();
    MenuBar::initialize();
    Properties::initialize();
    Properties_LineReader::initialize();
    BufferedWriter::initialize();
    PrintJob::initialize();
    JobAttributes::initialize();
    JobAttributes_DefaultSelectionType::initialize();
    JobAttributes_DestinationType::initialize();
    JobAttributes_DialogType::initialize();
    JobAttributes_MultipleDocumentHandlingType::initialize();
    arr_arr_I::initialize();
    JobAttributes_SidesType::initialize();
    PageAttributes::initialize();
    PageAttributes_ColorType::initialize();
    PageAttributes_OriginType::initialize();
    PageAttributes_MediaType::initialize();
    PageAttributes_OrientationRequestedType::initialize();
    PageAttributes_PrintQualityType::initialize();
    AWTEventListener::initialize();
    DragSource::initialize();
    DragGestureEvent::initialize();
    DragSourceListener::initialize();
    DragGestureRecognizer::initialize();
    DragGestureListener::initialize();
    DragSourceContext::initialize();
    DragSourceMotionListener::initialize();
    DragSourceDragEvent::initialize();
    DragSourceEvent::initialize();
    DragSourceDropEvent::initialize();
    Dialog_ModalityType::initialize();
    WeakReference::initialize();
    Dialog::initialize();
    AtomicLong::initialize();
    LongUnaryOperator::initialize();
    WindowEvent::initialize();
    AppContext::initialize();
    WindowListener::initialize();
    WindowFocusListener::initialize();
    WindowStateListener::initialize();
    IdentityArrayList::initialize();
    AbstractList::initialize();
    Window_Type::initialize();
    GraphicsDevice_WindowTranslucency::initialize();
    BufferedImageOp::initialize();
    Paint::initialize();
    RenderedImage::initialize();
    RenderableImage::initialize();
    GlyphVector::initialize();
    GlyphMetrics::initialize();
    GlyphJustificationInfo::initialize();
    Composite::initialize();
    Stroke::initialize();
    RenderingHints_Key::initialize();
    RenderingHints::initialize();
    Annotation::initialize();
    NumericShaper::initialize();
    NumericShaper_Range::initialize();
    TransformAttribute::initialize();
    EAttribute_interface::initialize();
    Font2D::initialize();
    CharToGlyphMapper::initialize();
    FontStrike::initialize();
    GeneralPath::initialize();
    Path2D_Float::initialize();
    PathIterator::initialize();
    Path2D::initialize();
    Point2D_Float::initialize();
    Rectangle2D_Float::initialize();
    StrikeMetrics::initialize();
    FontStrikeDesc::initialize();
    FontLineMetrics::initialize();
    FontPeer::initialize();
    Polygon::initialize();
    Crossings::initialize();
    Vector::initialize();
    SimpleTexture::initialize();
    EntityPlayerSP::initialize();
    RenderPlayer::initialize();
    ModelPlayer::initialize();
    ModelBiped::initialize();
    ModelBase::initialize();
    ModelRenderer::initialize();
    TextureOffset::initialize();
    RendererLivingEntity::initialize();
    LayerRenderer::initialize();
    FrameTimer::initialize();
    GuiScreen::initialize();
    GuiButton::initialize();
    Gui::initialize();
    Framebuffer::initialize();
    MusicTicker::initialize();
    WorldClient::initialize();
    Session::initialize();
    Session_Type::initialize();
    Minecraft_Test::initialize();

}
